name: EasyTier Docker Build

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 00:00 运行
  workflow_dispatch:
    inputs:
      version:
        description: 'EasyTier version to build (e.g. v2.4.1)'
        type: string
        default: 'latest'
        required: false

env:
  DOCKERHUB_REPO: aoxijy/easytier-web

jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check-version.outputs.should_build }}
      build_version: ${{ steps.get-version.outputs.build_version }}
    steps:
      - name: Get latest version
        id: get-version
        run: |
          # 如果是手动触发且有指定版本，则使用该版本
          if [ -n "${{ inputs.version }}" ] && [ "${{ inputs.version }}" != "latest" ]; then
            BUILD_VERSION="${{ inputs.version }}"
          else
            # 获取最新版本
            BUILD_VERSION=$(curl -s https://api.github.com/repos/EasyTier/EasyTier/releases/latest | jq -r '.tag_name')
          fi
          
          echo "build_version=$BUILD_VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $BUILD_VERSION"
          
      - name: Check if build needed
        id: check-version
        run: |
          # 检查此版本是否已构建过
          EXISTING_TAGS=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.DOCKERHUB_REPO }}/tags/?page_size=100" | jq -r '.results[].name')
          
          if echo "$EXISTING_TAGS" | grep -q "${{ steps.get-version.outputs.build_version }}"; then
            echo "should_build=false" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.get-version.outputs.build_version }} already exists, skipping build"
          else
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "New version ${{ steps.get-version.outputs.build_version }}, building"
          fi

  build:
    needs: version-check
    if: ${{ needs.version-check.outputs.should_build == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ needs.version-check.outputs.build_version }}
            ${{ env.DOCKERHUB_REPO }}:latest
          build-args: |
            EASYTIER_VERSION=${{ needs.version-check.outputs.build_version }}
      
      - name: Send notification
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `✅ Successfully built EasyTier with Web image \`${{ needs.version-check.outputs.build_version }}\`!\n\n` +
                    `**Docker Hub:**\n` +
                    `- ${{ env.DOCKERHUB_REPO }}:${{ needs.version-check.outputs.build_version }}\n` +
                    `- ${{ env.DOCKERHUB_REPO }}:latest`
            })
