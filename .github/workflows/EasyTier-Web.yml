name: EasyTier Docker Build (AMD64)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'EasyTier version to build (e.g. 2.4.1)'
        type: string
        required: true

env:
  DOCKERHUB_REPO: aoxijy/easytier-web

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Prepare artifacts
        run: |
          # 使用手动输入的版本
          BUILD_VERSION="${{ github.event.inputs.version }}"
          echo "Building version: $BUILD_VERSION"
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV
          
          # 下载官方Release压缩包
          echo "下载EasyTier发布包..."
          URL="https://github.com/EasyTier/EasyTier/releases/download/v${BUILD_VERSION}/easytier-linux-x86_64-v${BUILD_VERSION}.zip"
          wget -O easytier.zip "$URL"
          
          # 解压ZIP文件
          unzip easytier.zip -d easytier-unpacked
          
          # 进入解压目录
          cd "easytier-unpacked/easytier-${BUILD_VERSION}/easytier-linux-x86_64"
          
          # 确保可执行权限
          chmod +x easytier-core
          chmod +x easytier-web-embed
          
          # 构建Web界面
          ./easytier-web-embed --build-web
          
          # 创建Docker构建上下文
          mkdir -p docker-context
          cp easytier-core docker-context/
          cp easytier-web-embed docker-context/
          cp -r web docker-context/web
          cp ../../../../start.sh docker-context/
          
          # 返回工作目录
          cd ../../..
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./easytier-unpacked/easytier-${BUILD_VERSION}/easytier-linux-x86_64/docker-context
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ env.BUILD_VERSION }}
            ${{ env.DOCKERHUB_REPO }}:latest
      
      - name: Send success notification
        if: success()
        run: |
          echo "✅ 成功构建并推送 ${{ env.DOCKERHUB_REPO }}:${{ env.BUILD_VERSION }}"
