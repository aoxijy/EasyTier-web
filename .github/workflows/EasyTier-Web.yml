name: EasyTier Docker Build

on:
  schedule:
    - cron: '0 0 * * *'  # Daily build check
  workflow_dispatch:
    inputs:
      version:
        description: 'EasyTier version to build (e.g. v2.4.1)'
        type: string
        default: 'latest'
        required: false

env:
  DOCKERHUB_REPO: aoxijy/easytier-web

jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs:
      build_version: ${{ steps.get-version.outputs.build_version }}
      should_build: ${{ steps.check-version.outputs.should_build }}
    steps:
      - name: Get version
        id: get-version
        run: |
          if [ -n "${{ inputs.version }}" ] && [ "${{ inputs.version }}" != "latest" ]; then
            BUILD_VERSION="${{ inputs.version }}"
          else
            BUILD_VERSION=$(curl -s https://api.github.com/repos/EasyTier/EasyTier/releases/latest | jq -r '.tag_name')
          fi
          echo "build_version=$BUILD_VERSION" >> $GITHUB_OUTPUT
          echo "Version: $BUILD_VERSION"

      - name: Check existing tags
        id: check-version
        run: |
          EXISTING_TAGS=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.DOCKERHUB_REPO }}/tags/?page_size=100" | jq -r '.results[].name')
          if echo "$EXISTING_TAGS" | grep -q "${{ steps.get-version.outputs.build_version }}"; then
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

  build:
    needs: version-check
    if: ${{ needs.version-check.outputs.should_build == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Prepare source code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 获取要构建的版本
          BUILD_VERSION=${{ needs.version-check.outputs.build_version }}
          if [ -n "${{ inputs.version }}" ] && [ "${{ inputs.version }}" != "latest" ]; then
            BUILD_VERSION="${{ inputs.version }}"
          fi
          
          # 确保版本号有 'v' 前缀
          if [[ ! $BUILD_VERSION =~ ^v ]]; then
            BUILD_VERSION="v$BUILD_VERSION"
          fi
          
          echo "Building version: $BUILD_VERSION"
          
          # 1. 克隆 EasyTier 主仓库
          echo "Cloning EasyTier main repository..."
          git clone --depth 1 --branch $BUILD_VERSION https://github.com/EasyTier/EasyTier.git easytier-source
          
          # 2. 克隆 EasyTier-Web-Embed (使用 GitHub Token 认证)
          echo "Cloning EasyTier-Web-Embed with authentication..."
          git clone --depth 1 "https://oauth2:$GITHUB_TOKEN@github.com/EasyTier/EasyTier-Web-Embed.git" web-source
          
          # 3. 构建 Web UI
          echo "Building Web UI..."
          cd web-source
          npm ci --silent
          npm run build
          cd ..
          
          # 4. 将构建好的 Web UI 复制到主仓库
          echo "Copying built Web UI to main repository..."
          mkdir -p easytier-source/web/dist
          cp -r web-source/dist/* easytier-source/web/dist/
          
          # 5. 复制 Dockerfile 到构建上下文
          echo "Copying Dockerfile to build context..."
          cp Dockerfile easytier-source/
          
          # 保存版本信息
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./easytier-source
          file: ./easytier-source/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ env.BUILD_VERSION }}
            ${{ env.DOCKERHUB_REPO }}:latest
          build-args: |
            EASYTIER_VERSION=${{ env.BUILD_VERSION }}
      
      - name: Send success notification
        if: success()
        run: |
          echo "✅ Successfully built ${{ env.DOCKERHUB_REPO }}:${{ env.BUILD_VERSION }}"
